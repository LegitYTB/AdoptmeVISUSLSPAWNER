local Loads = require(game.ReplicatedStorage.Fsys).load
local RouterClient = Loads("RouterClient")
local ClientData = Loads("ClientData")
local InventoryDB = Loads("InventoryDB")
local Inventory = ClientData.get("inventory")
local properties = {
    "flyable",
    "rideable",
    "neon",
    "mega_neon"
}

local function generate_prop(i)
    local props = {}

    props[properties[1]] = true -- flyable
    props[properties[2]] = true -- rideable
    props[properties[3]] = true -- neon
    props[properties[4]] = false -- mega_neon
    props["age"] = i
    
    return props
end

for category_name, category_table in pairs(InventoryDB) do
    for id, item in pairs(category_table) do
        if category_name == "pets" and item.name == "Frost Dragon" then
            local fake_uuid = game.HttpService:GenerateGUID()
            local n_item = item
            n_item["unique"] = "ass" .. fake_uuid
            n_item["category"] = "pets"
            n_item["properties"] = generate_prop(1) -- pass an initial value for i
            n_item["newness_order"] = math.random(1, 900000)
            Inventory[category_name][fake_uuid] = n_item
        end
    end
end

local clientData = require(game.ReplicatedStorage.ClientModules.Core.ClientData)
local playerData = clientData.get_data()[tostring(game.Players.LocalPlayer)]
for i,v in pairs(playerData.inventory.pets) do
v.properties.rideable = true
v.properties.flyable = true
end
